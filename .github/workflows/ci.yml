name: ci

on:
  pull_request:
  push:

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        ghc:
        - "8.6.5"
        - "8.8.4"
        - "8.10.7"
        - "9.0.2"
        - "9.2.8"
        - "9.4.8"
        - "9.6.6"

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install pcre
        # # For older GHCs
        # brew install llvm@13 --quiet # Suppress deprecation warning
        # echo /opt/homebrew/opt/llvm@13/bin >> $GITHUB_PATH
        # # https://gitlab.haskell.org/ghc/ghc/-/issues/20592#note_391266
        # echo "C_INCLUDE_PATH=`xcrun --show-sdk-path`/usr/include/ffi" >> "$GITHUB_ENV"
        sudo find / -name pcre.h

    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: "latest"

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal build all \
          --extra-include-dirs=/opt/homebrew/include

    - name: Test
      run: |
        cabal test all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ghc:
        - "8.6.5"
        - "8.8.4"
        - "8.10.7"
        - "9.0.2"
        - "9.2.8"
        - "9.4.8"
        - "9.6.6"

    steps:
    - uses: actions/checkout@v4

    - uses: cachix/install-nix-action@v27
      if: runner.os != 'Windows'
      with:
        # release-24.05
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/74435c9234c751e6786c5f3fd34ff6b0f0c13bd1.tar.gz

    - uses: haskell-actions/setup@v2
      name: Setup Haskell Stack
      with:
        enable-stack: true
        ghc-version: ${{ matrix.ghc }}
        stack-version: "latest"

    - uses: actions/cache/restore@v4
      name: Cache restore ~/.stack
      id: cache-restore
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test --system-ghc --ta="--headless-tests"

    - uses: actions/cache/save@v4
      if: always() && steps.cache-restore.outputs.cache-hit != 'true'
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack
